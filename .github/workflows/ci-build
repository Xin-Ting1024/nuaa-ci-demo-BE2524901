name: Java CI Build & Package

on: [push, pull_request]  # 触发条件：代码推送或 PR 创建

jobs:
  build-and-package:
    runs-on: ubuntu-latest  # 使用 Ubuntu 最新版环境

    steps:
      # 步骤1：拉取代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 步骤2：安装 JDK 17（若 CI 环境未预装）
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'  # 使用 Eclipse Temurin 发行版（稳定）

      # 步骤3：缓存 Maven 依赖（加速构建）
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 步骤4：自动编译（mvn compile）
      - name: Compile code
        run: mvn compile -B  # -B 表示批处理模式（非交互式）

      # 步骤5：自动打包（mvn package，含测试）
      - name: Package project
        run: mvn package -DskipTests=false  # 强制运行测试（确保质量）

      # 步骤6：上传打包产物（JAR/WAR）
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: calculator-build  # 工件名称（自定义）
          path: target/*.jar  # 打包产物路径（Maven 默认输出到 target/）
